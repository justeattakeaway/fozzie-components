{"version":3,"file":"13.45b6a8fc.iframe.bundle.js","sources":["webpack:///../components/organisms/f-content-cards/node_modules/@braze/web-sdk/src/Push/push-manager.js","webpack:///../components/organisms/f-content-cards/node_modules/@braze/web-sdk/src/Push/push-manager-factory.js"],"sourcesContent":["import { isArray as p, isEqual as ii } from \"../util/code-utils.js\";\nimport ti from \"../models/push-token.js\";\nimport r from \"../../shared-lib/braze-shared-lib.js\";\nimport { STORAGE_KEYS as i } from \"../managers/storage-manager.js\";\nimport { User } from \"../User/index.js\";\nimport { WindowUtils as Z } from \"../util/window-utils.js\";\nimport jt from \"./utils/push-utils.js\";\nimport { getErrorMessage as ei } from \"../util/error-utils.js\";\nexport default class ea {\n  constructor(i, t, e, s, r, n, o, u, h, a) {\n    (this.hn = i),\n      (this.cn = t),\n      (this.fn = e),\n      (this.dn = r),\n      (this.bn = n),\n      (this.wt = o),\n      (this.yn = u),\n      (this.gn = h),\n      (this.u = a),\n      (this.hn = i),\n      (this.cn = t),\n      (this.fn = e),\n      (this.wn = s + \"/safari/\" + t),\n      (this.dn = r || \"/service-worker.js\"),\n      (this.bn = n),\n      (this.wt = o),\n      (this.yn = u || !1),\n      (this.gn = h || !1),\n      (this.u = a),\n      (this.vn = jt.kn()),\n      (this.Pn = jt.Dn());\n  }\n  Sn() {\n    return this.gn;\n  }\n  An(i, t, e, s, n) {\n    i.unsubscribe()\n      .then((i) => {\n        i\n          ? this.jn(t, e, s, n)\n          : (r.j.error(\"Failed to unsubscribe device from push.\"),\n            \"function\" == typeof n && n(!1));\n      })\n      .catch((i) => {\n        r.j.error(\"Push unsubscription error: \" + i),\n          \"function\" == typeof n && n(!1);\n      });\n  }\n  Un(i, t, e) {\n    const s = ((i) => {\n      if (\"string\" == typeof i) return i;\n      if (0 !== i.endpoint.indexOf(\"https://android.googleapis.com/gcm/send\"))\n        return i.endpoint;\n      let t = i.endpoint;\n      const e = i;\n      return (\n        e.Wn &&\n          -1 === i.endpoint.indexOf(e.Wn) &&\n          (t = i.endpoint + \"/\" + e.Wn),\n        t\n      );\n    })(i);\n    let r = null,\n      n = null;\n    const o = i;\n    if (null != o.getKey)\n      try {\n        const i = Array.from(new Uint8Array(o.getKey(\"p256dh\"))),\n          t = Array.from(new Uint8Array(o.getKey(\"auth\")));\n        (r = btoa(String.fromCharCode.apply(null, i))),\n          (n = btoa(String.fromCharCode.apply(null, t)));\n      } catch (i) {\n        if (\"invalid arguments\" !== ei(i)) throw i;\n      }\n    const u = ((i) => {\n      let t;\n      return i.options &&\n        (t = i.options.applicationServerKey) &&\n        t.byteLength &&\n        t.byteLength > 0\n        ? btoa(String.fromCharCode.apply(null, Array.from(new Uint8Array(t))))\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n        : null;\n    })(o);\n    this.hn && this.hn._n(s, t, r, n, u),\n      s && \"function\" == typeof e && e(s, r, n);\n  }\n  xn() {\n    this.hn && this.hn.Nn(!0);\n  }\n  Tn(i, t) {\n    this.hn && this.hn.Nn(!1), r.j.info(i), \"function\" == typeof t && t(!1);\n  }\n  zn(i, t, e, s) {\n    var n;\n    if (\"default\" === t.permission)\n      try {\n        window.safari.pushNotification.requestPermission(\n          this.wn,\n          i,\n          {\n            api_key: this.cn,\n            device_id:\n              (null === (n = this.fn) || void 0 === n ? void 0 : n.ce().id) ||\n              \"\",\n          },\n          (t) => {\n            \"granted\" === t.permission &&\n              this.hn &&\n              this.hn.setPushNotificationSubscriptionType(\n                User.NotificationSubscriptionTypes.OPTED_IN,\n              ),\n              this.zn(i, t, e, s);\n          },\n        );\n      } catch (i) {\n        this.Tn(\"Could not request permission for push: \" + i, s);\n      }\n    else\n      \"denied\" === t.permission\n        ? this.Tn(\n            \"The user has blocked notifications from this site, or Safari push is not configured in the Braze dashboard.\",\n            s,\n          )\n        : \"granted\" === t.permission &&\n          (r.j.info(\"Device successfully subscribed to push.\"),\n          this.Un(t.deviceToken, new Date(), e));\n  }\n  requestPermission(i, t, e) {\n    const s = (s) => {\n      switch (s) {\n        case \"granted\":\n          return void (\"function\" == typeof i && i());\n        case \"default\":\n          return void (\"function\" == typeof t && t());\n        case \"denied\":\n          return void (\"function\" == typeof e && e());\n        default:\n          r.j.error(\"Received unexpected permission result \" + s);\n      }\n    };\n    let n = !1;\n    const o = window.Notification.requestPermission((i) => {\n      n && s(i);\n    });\n    o\n      ? o.then((i) => {\n          s(i);\n        })\n      : (n = !0);\n  }\n  jn(i, t, e, s) {\n    const n = { userVisibleOnly: !0 };\n    null != t && (n.applicationServerKey = t),\n      i.pushManager\n        .subscribe(n)\n        .then((i) => {\n          r.j.info(\"Device successfully subscribed to push.\"),\n            this.Un(i, new Date(), e);\n        })\n        .catch((i) => {\n          jt.isPushBlocked()\n            ? (r.j.info(\"Permission for push notifications was denied.\"),\n              \"function\" == typeof s && s(!1))\n            : (r.j.error(\"Push subscription failed: \" + i),\n              \"function\" == typeof s && s(!0));\n        });\n  }\n  In() {\n    return this.yn\n      ? navigator.serviceWorker.getRegistration(this.dn)\n      : navigator.serviceWorker.register(this.dn).then(() =>\n          navigator.serviceWorker.ready.then(\n            (i) => (\n              i &&\n                \"function\" == typeof i.update &&\n                i.update().catch((i) => {\n                  r.j.info(\"ServiceWorker update failed: \" + i);\n                }),\n              i\n            ),\n          ),\n        );\n  }\n  Vn(i) {\n    this.yn ||\n      (i.unregister(), r.j.info(\"Service worker successfully unregistered.\"));\n  }\n  subscribe(t, e) {\n    if (!jt.isPushSupported())\n      return r.j.info(ea.qn), void (\"function\" == typeof e && e(!1));\n    if (this.vn) {\n      if (!this.yn && null != window.location) {\n        let i = this.dn;\n        -1 === i.indexOf(window.location.host) &&\n          (i = window.location.host + i),\n          -1 === i.indexOf(window.location.protocol) &&\n            (i = window.location.protocol + \"//\" + i);\n        const t = i.substr(0, i.lastIndexOf(\"/\") + 1);\n        if (0 !== Z.Cn().indexOf(t))\n          return (\n            r.j.error(\n              \"Cannot subscribe to push from a path higher than the service worker location (tried to subscribe from \" +\n                window.location.pathname +\n                \" but service worker is at \" +\n                i +\n                \")\",\n            ),\n            void (\"function\" == typeof e && e(!0))\n          );\n      }\n      if (jt.isPushBlocked())\n        return void this.Tn(\n          \"Notifications from this site are blocked. This may be a temporary embargo or a permanent denial.\",\n          e,\n        );\n      if (this.wt && !this.wt.En() && 0 === this.wt.li())\n        return (\n          r.j.info(\n            \"Waiting for VAPID key from server config before subscribing to push.\",\n          ),\n          void this.wt.Rn(() => {\n            this.subscribe(t, e);\n          })\n        );\n      const s = () => {\n          r.j.info(\"Permission for push notifications was denied.\"),\n            \"function\" == typeof e && e(!1);\n        },\n        n = () => {\n          let i = \"Permission for push notifications was ignored.\";\n          jt.isPushBlocked() &&\n            (i +=\n              \" The browser has automatically blocked further permission requests for a period (probably 1 week).\"),\n            r.j.info(i),\n            \"function\" == typeof e && e(!0);\n        },\n        o = jt.isPushPermissionGranted(),\n        u = () => {\n          !o &&\n            this.hn &&\n            this.hn.setPushNotificationSubscriptionType(\n              User.NotificationSubscriptionTypes.OPTED_IN,\n            ),\n            this.In()\n              .then((s) => {\n                if (null == s)\n                  return (\n                    r.j.error(\n                      \"No service worker registration. Set the `manageServiceWorkerExternally` initialization option to false or ensure that your service worker is registered before calling registerPush.\",\n                    ),\n                    void (\"function\" == typeof e && e(!0))\n                  );\n                s.pushManager\n                  .getSubscription()\n                  .then((n) => {\n                    let o = null;\n                    if (\n                      (this.wt &&\n                        null != this.wt.En() &&\n                        (o = r.On.Fn(this.wt.En())),\n                      n)\n                    ) {\n                      let u,\n                        h = null,\n                        a = null;\n                      if ((this.u && (u = this.u.v(i.k.Bn)), u && !p(u))) {\n                        let i;\n                        try {\n                          i = ti.Yn(u).Mn;\n                        } catch (t) {\n                          i = null;\n                        }\n                        null == i ||\n                          isNaN(i.getTime()) ||\n                          0 === i.getTime() ||\n                          ((h = i),\n                          (a = new Date(h)),\n                          a.setMonth(h.getMonth() + 6));\n                      }\n                      null != o &&\n                      n.options &&\n                      n.options.applicationServerKey &&\n                      n.options.applicationServerKey.byteLength &&\n                      n.options.applicationServerKey.byteLength > 0 &&\n                      !ii(o, new Uint8Array(n.options.applicationServerKey))\n                        ? (n.options.applicationServerKey.byteLength > 12\n                            ? r.j.info(\n                                \"Device was already subscribed to push using a different VAPID provider, creating new subscription.\",\n                              )\n                            : r.j.info(\n                                \"Attempting to upgrade a gcm_sender_id-based push registration to VAPID - depending on the browser this may or may not result in the same gcm_sender_id-based subscription.\",\n                              ),\n                          this.An(n, s, o, t, e))\n                        : n.expirationTime &&\n                          new Date(n.expirationTime).valueOf() <=\n                            new Date().valueOf()\n                        ? (r.j.info(\n                            \"Push subscription is expired, creating new subscription.\",\n                          ),\n                          this.An(n, s, o, t, e))\n                        : u && p(u)\n                        ? this.An(n, s, o, t, e)\n                        : null == a\n                        ? (r.j.info(\n                            \"No push subscription creation date found, creating new subscription.\",\n                          ),\n                          this.An(n, s, o, t, e))\n                        : a.valueOf() <= new Date().valueOf()\n                        ? (r.j.info(\n                            \"Push subscription older than 6 months, creating new subscription.\",\n                          ),\n                          this.An(n, s, o, t, e))\n                        : (r.j.info(\n                            \"Device already subscribed to push, sending existing subscription to backend.\",\n                          ),\n                          this.Un(n, h, t));\n                    } else this.jn(s, o, t, e);\n                  })\n                  .catch((i) => {\n                    r.j.error(\n                      \"Error checking current push subscriptions: \" + i,\n                    );\n                  });\n              })\n              .catch((i) => {\n                r.j.error(\"ServiceWorker registration failed: \" + i);\n              });\n        };\n      this.requestPermission(u, n, s);\n    } else if (this.Pn) {\n      if (null == this.bn || \"\" === this.bn)\n        return (\n          r.j.error(\n            \"You must supply the safariWebsitePushId initialization option in order to use registerPush on Safari\",\n          ),\n          void (\"function\" == typeof e && e(!0))\n        );\n      const i = window.safari.pushNotification.permission(this.bn);\n      this.zn(this.bn, i, t, e);\n    }\n  }\n  unsubscribe(i, t) {\n    if (!jt.isPushSupported())\n      return r.j.info(ea.qn), void (\"function\" == typeof t && t());\n    this.vn\n      ? navigator.serviceWorker.getRegistration().then((e) => {\n          e\n            ? e.pushManager\n                .getSubscription()\n                .then((s) => {\n                  s &&\n                    (this.xn(),\n                    s\n                      .unsubscribe()\n                      .then((s) => {\n                        s\n                          ? (r.j.info(\n                              \"Device successfully unsubscribed from push.\",\n                            ),\n                            \"function\" == typeof i && i())\n                          : (r.j.error(\n                              \"Failed to unsubscribe device from push.\",\n                            ),\n                            \"function\" == typeof t && t()),\n                          this.Vn(e);\n                      })\n                      .catch((i) => {\n                        r.j.error(\"Push unsubscription error: \" + i),\n                          \"function\" == typeof t && t();\n                      }));\n                })\n                .catch((i) => {\n                  r.j.error(\"Error unsubscribing from push: \" + i),\n                    \"function\" == typeof t && t();\n                })\n            : (r.j.info(\"Device already unsubscribed from push.\"),\n              \"function\" == typeof i && i());\n        })\n      : this.Pn &&\n        (this.xn(),\n        r.j.info(\"Device unsubscribed from push.\"),\n        \"function\" == typeof i && i());\n  }\n}\nea.qn = \"Push notifications are not supported in this browser.\";\n","import e, { OPTIONS as L } from \"../managers/braze-instance.js\";\nimport ea from \"./push-manager.js\";\nconst na = {\n  t: !1,\n  i: null,\n  m: () => (\n    na.o(),\n    na.i ||\n      (na.i = new ea(\n        e.br(),\n        e.Ma(),\n        e.te(),\n        e.Ys(),\n        e.nn(L._a),\n        e.nn(L.ka),\n        e.tr(),\n        e.nn(L.qa),\n        e.nn(L.Aa),\n        e.l(),\n      )),\n    na.i\n  ),\n  o: () => {\n    na.t || (e.g(na), (na.t = !0));\n  },\n  destroy: () => {\n    (na.i = null), (na.t = !1);\n  },\n};\nexport default na;\n"],"mappingslYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}