# version: 2.1 # use CircleCI 2.1
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  slack: circleci/slack@4.1.3

commands:
  set_deploy_key:
    description: Sets the ssh key for project access
    steps:
      - add_ssh_keys:
          fingerprints:
            - "0e:50:82:ad:81:17:a5:31:04:13:fd:6e:c7:72:c9:18"

  detect_root_change:
    description: Detects root package.json changes
    steps:
      - run: |
          changes=`git diff --name-only master...$CIRCLE_BRANCH | grep -v '^packages/'`

          if [ "${#changes}" > 0 ];
          then
            echo 'export ROOT_CHANGE=true' >> $BASH_ENV
            source $BASH_ENV
          else
            echo Root files not changed
          fi

  echo_root:
    description: Detects root package.json changes
    steps:
      - run: |
          echo $ROOT_CHANGE

  install_node_dependencies:
    description: Installs the node dependencies
    steps:
      - run: yarn install

  build_packages:
    description: Locally builds all packages in the monorepo
    steps:
      - run: |
          if [ "${ROOT_CHANGE}" == "true" ];
          then
            yarn build
          else
            yarn build --since origin/master --include-dependencies
          fi

  lint_packages:
    description: Locally lints all packages in the monorepo
    steps:
      - run: |
          if [ "${ROOT_CHANGE}" == "true" ];
          then
            yarn lint
          else
            yarn lint --since origin/master
          fi

  unit_integration_tests:
    description: Run Unit / Integration Tests
    steps:
      - run: |
          if [ "${ROOT_CHANGE}" == "true" ];
          then
            yarn test
          else
            yarn test --since origin/master
          fi

  build_storybook:
    description: Build Storybook for UI tests
    steps:
      - run: |
          if [ "${ROOT_CHANGE}" == "true" ];
          then
            yarn storybook:build
          else
            yarn storybook:build-changed
          fi

  component_tests:
    description: Run Components Tests
    steps:
      - run: |
          if [ "${ROOT_CHANGE}" == "true" ];
          then
            yarn test-component:chrome
          else
            yarn test-component:chrome --since origin/master
          fi

  accessibility_tests:
    description: Run Accessibility Tests
    steps:
      - run: |
          if [ "${ROOT_CHANGE}" == "true" ];
          then
            yarn test-a11y:chrome
          else
            yarn test-a11y:chrome --since origin/master
          fi

  visual_regression_tests:
    description: Run Percy Visual Regression Tests
    steps:
      - run: |
          if [ "${ROOT_CHANGE}" == "true" ];
          then
            yarn test:visual
          else
            yarn test:visual --since origin/master
          fi

  slack_notify_fail:
    description: Sends a slack notifaction on job failure
    steps:
      - slack/notify:
          branch_pattern: master
          event: fail
          custom: |
            {
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Your job *${CIRCLE_JOB}* has failed ‚ö†Ô∏è"
                      },
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Author*: ${CIRCLE_USERNAME}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Commit*: ${CIRCLE_SHA1}"
                        }
                      ],
                      "accessory": {
                        "type": "image",
                        "image_url": "https://user-images.githubusercontent.com/26894168/101182589-31708380-3646-11eb-80d5-b174d47bf7fb.png",
                        "alt_text": "Fozzie Logo"
                      }
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View Job"
                          },
                          "url": "${CIRCLE_BUILD_URL}"
                        }
                      ]
                    }
                  ],
                  "color": "danger"
                }
              ]
            }

  slack_notify_success:
    description: Sends a slack notifaction on job success
    steps:
      - slack/notify:
          branch_pattern: master
          event: pass
          custom: |
            {
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Your job *${CIRCLE_JOB}* has succeeded üéâ"
                      },
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Author*: ${CIRCLE_USERNAME}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Commit*: ${CIRCLE_SHA1}"
                        }
                      ],
                      "accessory": {
                        "type": "image",
                        "image_url": "https://user-images.githubusercontent.com/26894168/101182641-4220f980-3646-11eb-8782-29a6a2213815.png",
                        "alt_text": "Fozzie Logo"
                      }
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View Job"
                          },
                          "url": "${CIRCLE_BUILD_URL}"
                        }
                      ]
                    }
                  ],
                  "color": "good"
                }
              ]
            }

executors:
  node:
    docker:
      # specify the version you desire here
      - image: circleci/node:14.16.1-browsers # For latest available images check ‚Äì https://circleci.com/docs/2.0/docker-image-tags.json

jobs:

  working_directory: ~/repo

  build:
    executor: node
    environment:
      # required to prevent ENOMEM errors
      LERNA_ARGS: --concurrency 1
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - detect_root_change
      - echo_root
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
              - yarn-packages-{{ checksum "yarn.lock" }}
      - install_node_dependencies
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: # Run PR Checks
          name: Run PR Checks
          command: yarn danger ci
      - build_packages
      - lint_packages
      - unit_integration_tests
      - run: # Install Component Test Dependencies
          name: Install Component Test Dependencies
          command: yarn global add @vue/cli @vue/cli-service-global
      - build_storybook
      - run: # Serve Storybook
          name: Serve Storybook
          command: yarn storybook:serve-static
          background: true
      - component_tests
      - accessibility_tests
      - visual_regression_tests
      - store_artifacts:
          path: test/results/axe-violations
      - store_artifacts:
          path: test/results/allure/failure-videos
      - store_test_results:
          path: test/results/ci
      - run:
          name: Run Bundlewatch checks
          command: yarn bundlewatch
      - slack_notify_fail
      - slack_notify_success

  deploy-storybook:
    executor: node
    environment:
      # required to prevent ENOMEM errors
      LERNA_ARGS: --concurrency 1
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - install_node_dependencies
      - build_packages
      - run:
          name: Deploy
          command: lerna run storybook:deploy
      - slack_notify_fail
      - slack_notify_success

workflows:
  version: 2

  build:
    jobs:
      - build:
          context: web-core
          filters:
            branches:
              ignore: 'gh-pages'

  deploy-storybook:
    jobs:
      - deploy-storybook:
          context: web-core
          filters:
            branches:
              only: master
