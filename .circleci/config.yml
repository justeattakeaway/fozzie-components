# version: 2.1 # use CircleCI 2.1
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

commands:
  set_deploy_key:
    description: Sets the ssh key for project access
    steps:
      - add_ssh_keys:
          fingerprints:
            - "0e:50:82:ad:81:17:a5:31:04:13:fd:6e:c7:72:c9:18"

  install_node_dependencies:
    description: Installs the node dependencies
    steps:
      - run: yarn install

  build_packages:
    description: Locally builds all packages in the monorepo
    steps:
      - run: # Check UI packages all build as expected
          name: Build Packages
          command: yarn build

executors:
  node:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.14.1-browsers # For latest available images check â€“ https://circleci.com/docs/2.0/docker-image-tags.json

jobs:

  working_directory: ~/repo

  build:
    executor: node
    environment:
      # required to prevent ENOMEM errors
      LERNA_ARGS: --concurrency 1
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
              - yarn-packages-{{ checksum "yarn.lock" }}
      - install_node_dependencies
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: # Run PR Checks
          name: Run PR Checks
          command: yarn danger ci
      - build_packages
      - run: # Lint packages
          name: Run Lint Tasks on Packages
          command: yarn lint
      - run: # Run Tests
          name: Run Unit Tests
          command: yarn test
      - run: # Run Visual Regression Tests
          name: Run Visual Regression Tests
          command: cd ./packages/storybook && yarn snapshot

  deploy-storybook:
    executor: node
    environment:
      # required to prevent ENOMEM errors
      LERNA_ARGS: --concurrency 1
    steps:
      - set_deploy_key
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - install_node_dependencies
      - build_packages
      - run:
          name: Deploy
          command: yarn storybook:deploy --packages packages

workflows:
  version: 2

  build:
    jobs:
      - build:
          context: web-core
          filters:
            branches:
              ignore: 'gh-pages'

  deploy-storybook:
    jobs:
      - deploy-storybook:
          filters:
            branches:
              only: master
