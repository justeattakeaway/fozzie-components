# # version: 2.1 # use CircleCI 2.1
# #
# # Check https://circleci.com/docs/2.0/language-javascript/ for more details
# #
# version: 2.1
# orbs:
#   slack: circleci/slack@4.1.3

# commands:
#   set_deploy_key:
#     description: Sets the ssh key for project access
#     steps:
#       - add_ssh_keys:
#           fingerprints:
#             - "0e:50:82:ad:81:17:a5:31:04:13:fd:6e:c7:72:c9:18"

#   install_node_dependencies:
#     description: Installs the node dependencies
#     steps:
#       - run: yarn install --freeze-lockfile

#   build_packages:
#     description: Locally builds all packages in the monorepo
#     steps:
#       - run: # Check UI packages all build as expected
#           name: Build Packages
#           command: yarn build

#   slack_notify_fail:
#     description: Sends a slack notifaction on job failure
#     steps:
#       - slack/notify:
#           branch_pattern: master
#           event: fail
#           custom: |
#             {
#               "blocks": [
#                 {
#                   "type": "section",
#                   "text": {
#                     "type": "mrkdwn",
#                     "text": "Your job *${WORKFLOW_ID}* has failed ‚ö†Ô∏è"
#                   },
#                   "fields": [
#                     {
#                       "type": "mrkdwn",
#                       "text": "*Author*: ${CIRCLE_USERNAME}"
#                     },
#                     {
#                       "type": "mrkdwn",
#                       "text": "*Commit*: ${CIRCLE_SHA1}"
#                     }
#                   ],
#                   "accessory": {
#                     "type": "image",
#                     "image_url": "https://user-images.githubusercontent.com/26894168/101182589-31708380-3646-11eb-80d5-b174d47bf7fb.png",
#                     "alt_text": "Fozzie Logo"
#                   }
#                 },
#                 {
#                   "type": "actions",
#                   "elements": [
#                     {
#                       "type": "button",
#                       "text": {
#                         "type": "plain_text",
#                         "text": "View Job"
#                       },
#                       "url": "${CIRCLE_BUILD_URL}"
#                     }
#                   ]
#                 }
#               ]
#             }

#   slack_notify_success:
#     description: Sends a slack notifaction on job success
#     steps:
#       - slack/notify:
#           branch_pattern: master
#           event: pass
#           custom: |
#             {
#               "blocks": [
#                 {
#                   "type": "section",
#                   "text": {
#                     "type": "mrkdwn",
#                     "text": "Your job *${WORKFLOW_ID}* has succeeded üéâ"
#                   },
#                   "fields": [
#                     {
#                       "type": "mrkdwn",
#                       "text": "*Author*: ${CIRCLE_USERNAME}"
#                     },
#                     {
#                       "type": "mrkdwn",
#                       "text": "*Commit*: ${CIRCLE_SHA1}"
#                     }
#                   ],
#                   "accessory": {
#                     "type": "image",
#                     "image_url": "https://user-images.githubusercontent.com/26894168/101182641-4220f980-3646-11eb-8782-29a6a2213815.png",
#                     "alt_text": "Fozzie Logo"
#                   }
#                 },
#                 {
#                   "type": "actions",
#                   "elements": [
#                     {
#                       "type": "button",
#                       "text": {
#                         "type": "plain_text",
#                         "text": "View Job"
#                       },
#                       "url": "${CIRCLE_BUILD_URL}"
#                     }
#                   ]
#                 }
#               ]
#             }

# executors:
#   node:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:12.18.4-browsers # For latest available images check ‚Äì https://circleci.com/docs/2.0/docker-image-tags.json

# jobs:
#   set_up:
#     working_directory: ~/project
#     executor: node
#     environment:
#       WORKFLOW_ID: build
#       # required to prevent ENOMEM errors
#       LERNA_ARGS: --concurrency 1
#     steps: # a collection of executable commands
#       - checkout # special step to check out source code to working directory
#       - restore_cache:
#           name: Restore Yarn Package Cache
#           keys:
#               - yarn-packages-{{ checksum "yarn.lock" }}
#       - install_node_dependencies
#       - save_cache:
#           name: Save Yarn Package Cache
#           key: yarn-packages-{{ checksum "yarn.lock" }}
#           paths:
#             - ~/.cache/yarn
#       - run: # Run PR Checks
#           name: Run PR Checks
#           command: yarn danger ci
#       - save_cache:
#           name: Save Working Directory Cache
#           key: working-directory-{{ .Branch }}-{{ .Revision }}
#           paths:
#             - ~/project
                    
#   build:
#     executor: node
#     environment:
#       WORKFLOW_ID: build
#       # required to prevent ENOMEM errors
#       LERNA_ARGS: --concurrency 1
#     steps: # a collection of executable commands
#       - restore_cache:
#           name: Restore Working Directory Cache
#           keys:
#               - working-directory-{{ .Branch }}-{{ .Revision }}
#       - build_packages
#       - run: # Install WebDriverIO Test Dependencies
#           name: Install Component Test Dependencies
#           command: yarn global add @vue/cli @vue/cli-service-global
#       - run: # Build Storybook
#           name: Build Storybook
#           command: yarn storybook:build
#       - save_cache:
#           name: Save Working Directory + Bundles Cache
#           key: working-directory-dist{{ .Branch }}-{{ .Revision }}
#           paths:
#             - ~/project
#             - ~/.yarn/bin

#   linting:
#     executor: node
#     environment:
#       WORKFLOW_ID: build
#       # required to prevent ENOMEM errors
#       LERNA_ARGS: --concurrency 2
#     steps: # a collection of executable commands
#       - restore_cache:
#           name: Restore Working Directory + Bundles Cache
#           keys:
#               - working-directory-dist{{ .Branch }}-{{ .Revision }}
#       - run: # Lint packages
#           name: Run Lint Tasks on Packages
#           command: yarn lint
    
#   unit_tests:
#     executor: node
#     environment:
#       WORKFLOW_ID: build
#       # required to prevent ENOMEM errors
#       LERNA_ARGS: --concurrency 1
#     steps: # a collection of executable commands
#       - restore_cache:
#           name: Restore Working Directory + Bundles Cache
#           keys:
#               - working-directory-dist{{ .Branch }}-{{ .Revision }}
#       - run: # Run Tests
#           name: Run Unit / Integration Tests
#           command: yarn test

#   component_tests:
#     executor: node
#     environment:
#       WORKFLOW_ID: build
#     steps: # a collection of executable commands
#       - restore_cache:
#           name: Restore Working Directory + Bundles Cache
#           keys:
#               - working-directory-dist{{ .Branch }}-{{ .Revision }}
#       - run: # Serve Storybook
#           name: Serve Storybook
#           command: yarn storybook:serve-static
#           background: true
#       - run: # Run Storybook healthcheck
#           name: Run Storybook healthcheck
#           command: yarn test:wait-for-server
#       - run: # Run Component UI Tests
#           name: Run WebDriverIO Component
#           command: yarn test-component:chrome
#       - store_artifacts:
#           path: _results_/*.mp4
#       - store_test_results:
#           path: test/results/ci

#   accessibility_tests:
#     executor: node
#     environment:
#       WORKFLOW_ID: build
#     steps: # a collection of executable commands
#       - restore_cache:
#           name: Restore Working Directory + Bundles Cache
#           keys:
#               - working-directory-dist{{ .Branch }}-{{ .Revision }}
#       - run: # Serve Storybook
#           name: Serve Storybook
#           command: yarn storybook:serve-static
#           background: true
#       - run: # Run Storybook healthcheck
#           name: Run Storybook healthcheck
#           command: yarn test:wait-for-server
#       - run: # Run Accessibility UI Tests
#           name: Run WebDriverIO Accessibility Tests
#           command: yarn test-a11y:chrome
#       - store_artifacts:
#           path: axe-violations/
#       - store_test_results:
#           path: test/results/ci

#   bundlewatch:
#     executor: node
#     environment:
#       WORKFLOW_ID: build
#       # required to prevent ENOMEM errors
#       LERNA_ARGS: --concurrency 2
#     steps: # a collection of executable commands
#       - restore_cache:
#           name: Restore Working Directory + Bundles Cache
#           keys:
#               - working-directory-dist{{ .Branch }}-{{ .Revision }}
#       - run:
#           name: Run Bundlewatch checks
#           command: yarn bundlewatch

#   slack_reporting:
#     executor: node
#     environment:
#       WORKFLOW_ID: build
#     steps: # a collection of executable commands
#       - slack_notify_fail
#       - slack_notify_success

#   deploy-storybook:
#     working_directory: ~/project
#     executor: node
#     environment:
#       WORKFLOW_ID: deploy-storybook
#       # required to prevent ENOMEM errors
#       LERNA_ARGS: --concurrency 1
#     steps:
#       - checkout
#       - restore_cache:
#           name: Restore Yarn Package Cache
#           keys:
#             - yarn-packages-{{ checksum "yarn.lock" }}
#       - install_node_dependencies
#       - build_packages
#       - run:
#           name: Deploy
#           command: yarn storybook:deploy --packages packages
#       - slack_notify_fail
#       - slack_notify_success

# workflows:
#   version: 2

#   build:
#     jobs:
#       - set_up:
#           context: web-core
#           filters:
#             branches:
#               ignore: 'gh-pages'
#       - build:
#           context: web-core
#           requires:
#             - set_up
#           filters:
#             branches:
#               ignore: 'gh-pages'
#       - linting:
#           context: web-core
#           requires:
#             - build
#           filters:
#             branches:
#               ignore: 'gh-pages'    
#       - bundlewatch:
#           context: web-core
#           requires:
#             - build
#           filters:
#             branches:
#               ignore: 'gh-pages'
#       - unit_tests:
#           context: web-core
#           requires:
#             - build
#           filters:
#             branches:
#               ignore: 'gh-pages'
#       - component_tests:
#           context: web-core
#           requires:
#             - build
#           filters:
#             branches:
#               ignore: 'gh-pages'
#       - accessibility_tests:
#           context: web-core
#           requires:
#             - build
#           filters:
#             branches:
#               ignore: 'gh-pages'
#       - slack_reporting:
#           context: web-core
#           requires:
#             - bundlewatch
#             - component_tests
#             - linting
#             - unit_tests
#             - accessibility_tests
#           filters:
#             branches:
#               ignore: 'gh-pages'

#   deploy-storybook:
#     jobs:
#       - deploy-storybook:
#           context: web-core
#           filters:
#             branches:
#               only: master